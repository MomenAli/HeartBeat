

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Jan 03 23:25:03 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 2.10
    16                           ; Generated 31/07/2019 GMT
    17                           ; 
    18                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F877A Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  0091                     	;# 
    94  0092                     	;# 
    95  0093                     	;# 
    96  0094                     	;# 
    97  0098                     	;# 
    98  0099                     	;# 
    99  009C                     	;# 
   100  009D                     	;# 
   101  009E                     	;# 
   102  009F                     	;# 
   103  010C                     	;# 
   104  010D                     	;# 
   105  010E                     	;# 
   106  010F                     	;# 
   107  018C                     	;# 
   108  018D                     	;# 
   109  0000                     	;# 
   110  0001                     	;# 
   111  0002                     	;# 
   112  0003                     	;# 
   113  0004                     	;# 
   114  0005                     	;# 
   115  0006                     	;# 
   116  0007                     	;# 
   117  0008                     	;# 
   118  0009                     	;# 
   119  000A                     	;# 
   120  000B                     	;# 
   121  000C                     	;# 
   122  000D                     	;# 
   123  000E                     	;# 
   124  000E                     	;# 
   125  000F                     	;# 
   126  0010                     	;# 
   127  0011                     	;# 
   128  0012                     	;# 
   129  0013                     	;# 
   130  0014                     	;# 
   131  0015                     	;# 
   132  0015                     	;# 
   133  0016                     	;# 
   134  0017                     	;# 
   135  0018                     	;# 
   136  0019                     	;# 
   137  001A                     	;# 
   138  001B                     	;# 
   139  001B                     	;# 
   140  001C                     	;# 
   141  001D                     	;# 
   142  001E                     	;# 
   143  001F                     	;# 
   144  0081                     	;# 
   145  0085                     	;# 
   146  0086                     	;# 
   147  0087                     	;# 
   148  0088                     	;# 
   149  0089                     	;# 
   150  008C                     	;# 
   151  008D                     	;# 
   152  008E                     	;# 
   153  0091                     	;# 
   154  0092                     	;# 
   155  0093                     	;# 
   156  0094                     	;# 
   157  0098                     	;# 
   158  0099                     	;# 
   159  009C                     	;# 
   160  009D                     	;# 
   161  009E                     	;# 
   162  009F                     	;# 
   163  010C                     	;# 
   164  010D                     	;# 
   165  010E                     	;# 
   166  010F                     	;# 
   167  018C                     	;# 
   168  018D                     	;# 
   169  0000                     	;# 
   170  0001                     	;# 
   171  0002                     	;# 
   172  0003                     	;# 
   173  0004                     	;# 
   174  0005                     	;# 
   175  0006                     	;# 
   176  0007                     	;# 
   177  0008                     	;# 
   178  0009                     	;# 
   179  000A                     	;# 
   180  000B                     	;# 
   181  000C                     	;# 
   182  000D                     	;# 
   183  000E                     	;# 
   184  000E                     	;# 
   185  000F                     	;# 
   186  0010                     	;# 
   187  0011                     	;# 
   188  0012                     	;# 
   189  0013                     	;# 
   190  0014                     	;# 
   191  0015                     	;# 
   192  0015                     	;# 
   193  0016                     	;# 
   194  0017                     	;# 
   195  0018                     	;# 
   196  0019                     	;# 
   197  001A                     	;# 
   198  001B                     	;# 
   199  001B                     	;# 
   200  001C                     	;# 
   201  001D                     	;# 
   202  001E                     	;# 
   203  001F                     	;# 
   204  0081                     	;# 
   205  0085                     	;# 
   206  0086                     	;# 
   207  0087                     	;# 
   208  0088                     	;# 
   209  0089                     	;# 
   210  008C                     	;# 
   211  008D                     	;# 
   212  008E                     	;# 
   213  0091                     	;# 
   214  0092                     	;# 
   215  0093                     	;# 
   216  0094                     	;# 
   217  0098                     	;# 
   218  0099                     	;# 
   219  009C                     	;# 
   220  009D                     	;# 
   221  009E                     	;# 
   222  009F                     	;# 
   223  010C                     	;# 
   224  010D                     	;# 
   225  010E                     	;# 
   226  010F                     	;# 
   227  018C                     	;# 
   228  018D                     	;# 
   229  0000                     	;# 
   230  0001                     	;# 
   231  0002                     	;# 
   232  0003                     	;# 
   233  0004                     	;# 
   234  0005                     	;# 
   235  0006                     	;# 
   236  0007                     	;# 
   237  0008                     	;# 
   238  0009                     	;# 
   239  000A                     	;# 
   240  000B                     	;# 
   241  000C                     	;# 
   242  000D                     	;# 
   243  000E                     	;# 
   244  000E                     	;# 
   245  000F                     	;# 
   246  0010                     	;# 
   247  0011                     	;# 
   248  0012                     	;# 
   249  0013                     	;# 
   250  0014                     	;# 
   251  0015                     	;# 
   252  0015                     	;# 
   253  0016                     	;# 
   254  0017                     	;# 
   255  0018                     	;# 
   256  0019                     	;# 
   257  001A                     	;# 
   258  001B                     	;# 
   259  001B                     	;# 
   260  001C                     	;# 
   261  001D                     	;# 
   262  001E                     	;# 
   263  001F                     	;# 
   264  0081                     	;# 
   265  0085                     	;# 
   266  0086                     	;# 
   267  0087                     	;# 
   268  0088                     	;# 
   269  0089                     	;# 
   270  008C                     	;# 
   271  008D                     	;# 
   272  008E                     	;# 
   273  0091                     	;# 
   274  0092                     	;# 
   275  0093                     	;# 
   276  0094                     	;# 
   277  0098                     	;# 
   278  0099                     	;# 
   279  009C                     	;# 
   280  009D                     	;# 
   281  009E                     	;# 
   282  009F                     	;# 
   283  010C                     	;# 
   284  010D                     	;# 
   285  010E                     	;# 
   286  010F                     	;# 
   287  018C                     	;# 
   288  018D                     	;# 
   289  0006                     _PORTB	set	6
   290  0089                     _TRISE	set	137
   291  0088                     _TRISD	set	136
   292  0087                     _TRISC	set	135
   293  0085                     _TRISA	set	133
   294  0086                     _TRISB	set	134
   295                           
   296                           ; #config settings
   297  0000                     
   298                           	psect	cinit
   299  07FC                     start_initialization:	
   300  07FC                     __initialization:	
   301  07FC                     end_of_initialization:	
   302                           ;End of C runtime variable initialization code
   303                           
   304  07FC                     __end_of__initialization:	
   305  07FC  0183               	clrf	3
   306  07FD  120A  118A  2E49   	ljmp	_main	;jump to C main() function
   307                           
   308                           	psect	cstackCOMMON
   309  0070                     __pcstackCOMMON:	
   310  0070                     ?_LED_Toggle:	
   311  0070                     ?_LED_SetState:	
   312                           ; 1 bytes @ 0x0
   313                           
   314  0070                     ?_main:	
   315                           ; 1 bytes @ 0x0
   316                           
   317  0070                     ?_GPIO_Init_Pin:	
   318                           ; 1 bytes @ 0x0
   319                           
   320  0070                     ?_LED_GetState:	
   321                           ; 1 bytes @ 0x0
   322                           
   323  0070                     ??_LED_GetState:	
   324                           ; 1 bytes @ 0x0
   325                           
   326  0070                     LED_SetState@state:	
   327                           ; 1 bytes @ 0x0
   328                           
   329  0070                     GPIO_Init_Pin@DirRegAddress:	
   330                           ; 1 bytes @ 0x0
   331                           
   332                           
   333                           ; 2 bytes @ 0x0
   334  0070                     	ds	1
   335  0071                     ??_LED_SetState:	
   336                           
   337                           ; 1 bytes @ 0x1
   338  0071                     	ds	1
   339  0072                     GPIO_Init_Pin@pin_number:	
   340  0072                     LED_GetState@led:	
   341                           ; 1 bytes @ 0x2
   342                           
   343                           
   344                           ; 1 bytes @ 0x2
   345  0072                     	ds	1
   346  0073                     GPIO_Init_Pin@dir:	
   347  0073                     LED_GetState@ret:	
   348                           ; 1 bytes @ 0x3
   349                           
   350  0073                     LED_SetState@led:	
   351                           ; 1 bytes @ 0x3
   352                           
   353                           
   354                           ; 1 bytes @ 0x3
   355  0073                     	ds	1
   356  0074                     ??_LED_Toggle:	
   357  0074                     ??_GPIO_Init_Pin:	
   358                           ; 1 bytes @ 0x4
   359                           
   360  0074                     LED_Toggle@led:	
   361                           ; 1 bytes @ 0x4
   362                           
   363                           
   364                           ; 1 bytes @ 0x4
   365  0074                     	ds	3
   366  0077                     GPIO_Init_Pin@ret:	
   367                           
   368                           ; 1 bytes @ 0x7
   369  0077                     	ds	1
   370  0078                     ?_LED_Init:	
   371  0078                     LED_Init@state:	
   372                           ; 1 bytes @ 0x8
   373                           
   374                           
   375                           ; 1 bytes @ 0x8
   376  0078                     	ds	1
   377  0079                     ??_LED_Init:	
   378                           
   379                           ; 1 bytes @ 0x9
   380  0079                     	ds	2
   381  007B                     LED_Init@led:	
   382                           
   383                           ; 1 bytes @ 0xB
   384  007B                     	ds	1
   385  007C                     LED_Init@ret:	
   386                           
   387                           ; 1 bytes @ 0xC
   388  007C                     	ds	1
   389                           
   390                           	psect	cstackBANK0
   391  0020                     __pcstackBANK0:	
   392  0020                     ??_main:	
   393                           
   394                           ; 1 bytes @ 0x0
   395  0020                     	ds	3
   396                           
   397                           	psect	maintext
   398  0649                     __pmaintext:	
   399 ;;
   400 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   401 ;;
   402 ;; *************** function _main *****************
   403 ;; Defined at:
   404 ;;		line 18 in file "HeartBeat.c"
   405 ;; Parameters:    Size  Location     Type
   406 ;;		None
   407 ;; Auto vars:     Size  Location     Type
   408 ;;		None
   409 ;; Return value:  Size  Location     Type
   410 ;;                  1    wreg      void 
   411 ;; Registers used:
   412 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   413 ;; Tracked objects:
   414 ;;		On entry : B00/0
   415 ;;		On exit  : 0/0
   416 ;;		Unchanged: 0/0
   417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   418 ;;      Params:         0       0       0       0       0
   419 ;;      Locals:         0       0       0       0       0
   420 ;;      Temps:          0       3       0       0       0
   421 ;;      Totals:         0       3       0       0       0
   422 ;;Total ram usage:        3 bytes
   423 ;; Hardware stack levels required when called:    2
   424 ;; This function calls:
   425 ;;		_LED_Init
   426 ;;		_LED_Toggle
   427 ;; This function is called by:
   428 ;;		Startup code after reset
   429 ;; This function uses a non-reentrant model
   430 ;;
   431                           
   432                           
   433                           ;psect for function _main
   434  0649                     _main:	
   435  0649                     l927:	
   436                           ;incstack = 0
   437                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   438                           
   439                           
   440                           ;HeartBeat.c: 21:     LED_Init(LED1,LED_OFF);
   441  0649  01F8               	clrf	LED_Init@state
   442  064A  3000               	movlw	0
   443  064B  120A  118A  278F  120A  118A  	fcall	_LED_Init
   444                           
   445                           ;HeartBeat.c: 22:     LED_Init(LED2,LED_OFF);
   446  0650  01F8               	clrf	LED_Init@state
   447  0651  3001               	movlw	1
   448  0652  120A  118A  278F  120A  118A  	fcall	_LED_Init
   449  0657                     l11:	
   450                           ;HeartBeat.c: 24:     while(1){
   451                           
   452                           
   453                           ;HeartBeat.c: 26:         LED_Toggle(LED1);
   454  0657  3000               	movlw	0
   455  0658  120A  118A  262C  120A  118A  	fcall	_LED_Toggle
   456  065D                     l929:	
   457                           
   458                           ;HeartBeat.c: 27:         _delay((unsigned long)((500)*(20000000/4000.0)));
   459  065D  300D               	movlw	13
   460  065E  1283               	bcf	3,5	;RP0=0, select bank0
   461  065F  1303               	bcf	3,6	;RP1=0, select bank0
   462  0660  00A2               	movwf	??_main+2
   463  0661  30AF               	movlw	175
   464  0662  00A1               	movwf	??_main+1
   465  0663  30B5               	movlw	181
   466  0664  00A0               	movwf	??_main
   467  0665                     u337:	
   468  0665  0BA0               	decfsz	??_main,f
   469  0666  2E65               	goto	u337
   470  0667  0BA1               	decfsz	??_main+1,f
   471  0668  2E65               	goto	u337
   472  0669  0BA2               	decfsz	??_main+2,f
   473  066A  2E65               	goto	u337
   474  066B  2E6C               	nop2
   475  066C                     l931:	
   476                           
   477                           ;HeartBeat.c: 28:         LED_Toggle(LED1);
   478  066C  3000               	movlw	0
   479  066D  120A  118A  262C  120A  118A  	fcall	_LED_Toggle
   480  0672                     l933:	
   481                           
   482                           ;HeartBeat.c: 29:         LED_Toggle(LED2);
   483  0672  3001               	movlw	1
   484  0673  120A  118A  262C  120A  118A  	fcall	_LED_Toggle
   485  0678                     l935:	
   486                           
   487                           ;HeartBeat.c: 30:         _delay((unsigned long)((500)*(20000000/4000.0)));
   488  0678  300D               	movlw	13
   489  0679  1283               	bcf	3,5	;RP0=0, select bank0
   490  067A  1303               	bcf	3,6	;RP1=0, select bank0
   491  067B  00A2               	movwf	??_main+2
   492  067C  30AF               	movlw	175
   493  067D  00A1               	movwf	??_main+1
   494  067E  30B5               	movlw	181
   495  067F  00A0               	movwf	??_main
   496  0680                     u347:	
   497  0680  0BA0               	decfsz	??_main,f
   498  0681  2E80               	goto	u347
   499  0682  0BA1               	decfsz	??_main+1,f
   500  0683  2E80               	goto	u347
   501  0684  0BA2               	decfsz	??_main+2,f
   502  0685  2E80               	goto	u347
   503  0686  2E87               	nop2
   504                           
   505                           ;HeartBeat.c: 31:         LED_Toggle(LED2);
   506  0687  3001               	movlw	1
   507  0688  120A  118A  262C  120A  118A  	fcall	_LED_Toggle
   508  068D  2E57               	goto	l11
   509  068E  120A  118A  2800   	ljmp	start
   510  0691                     __end_of_main:	
   511                           
   512                           	psect	text1
   513  062C                     __ptext1:	
   514 ;; *************** function _LED_Toggle *****************
   515 ;; Defined at:
   516 ;;		line 93 in file "Led.c"
   517 ;; Parameters:    Size  Location     Type
   518 ;;  led             1    wreg     enum E859
   519 ;; Auto vars:     Size  Location     Type
   520 ;;  led             1    4[COMMON] enum E859
   521 ;; Return value:  Size  Location     Type
   522 ;;                  1    wreg      void 
   523 ;; Registers used:
   524 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   525 ;; Tracked objects:
   526 ;;		On entry : 0/0
   527 ;;		On exit  : 0/0
   528 ;;		Unchanged: 0/0
   529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   530 ;;      Params:         0       0       0       0       0
   531 ;;      Locals:         1       0       0       0       0
   532 ;;      Temps:          0       0       0       0       0
   533 ;;      Totals:         1       0       0       0       0
   534 ;;Total ram usage:        1 bytes
   535 ;; Hardware stack levels used:    1
   536 ;; Hardware stack levels required when called:    1
   537 ;; This function calls:
   538 ;;		_LED_GetState
   539 ;;		_LED_SetState
   540 ;; This function is called by:
   541 ;;		_main
   542 ;; This function uses a non-reentrant model
   543 ;;
   544                           
   545                           
   546                           ;psect for function _LED_Toggle
   547  062C                     _LED_Toggle:	
   548                           
   549                           ;incstack = 0
   550                           ; Regs used in _LED_Toggle: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   551                           ;LED_Toggle@led stored from wreg
   552  062C  00F4               	movwf	LED_Toggle@led
   553  062D                     l921:	
   554                           
   555                           ;Led.c: 93: void LED_Toggle(LED_t led);Led.c: 94: {;Led.c: 95:     if(LED_GetState(led))
   556  062D  0874               	movf	LED_Toggle@led,w
   557  062E  120A  118A  26DE  120A  118A  	fcall	_LED_GetState
   558  0633  3A00               	xorlw	0
   559  0634  1903               	skipnz
   560  0635  2E37               	goto	u321
   561  0636  2E38               	goto	u320
   562  0637                     u321:	
   563  0637  2E40               	goto	l925
   564  0638                     u320:	
   565  0638                     l923:	
   566                           
   567                           ;Led.c: 96:     {;Led.c: 97:         LED_SetState(led,LED_OFF);
   568  0638  01F0               	clrf	LED_SetState@state
   569  0639  0874               	movf	LED_Toggle@led,w
   570  063A  120A  118A  2691  120A  118A  	fcall	_LED_SetState
   571                           
   572                           ;Led.c: 98:     }
   573  063F  2E48               	goto	l85
   574  0640                     l925:	
   575                           
   576                           ;Led.c: 100:     {;Led.c: 101:         LED_SetState(led,LED_ON);
   577  0640  01F0               	clrf	LED_SetState@state
   578  0641  0AF0               	incf	LED_SetState@state,f
   579  0642  0874               	movf	LED_Toggle@led,w
   580  0643  120A  118A  2691  120A  118A  	fcall	_LED_SetState
   581  0648                     l85:	
   582  0648  0008               	return
   583  0649                     __end_of_LED_Toggle:	
   584                           
   585                           	psect	text2
   586  06DE                     __ptext2:	
   587 ;; *************** function _LED_GetState *****************
   588 ;; Defined at:
   589 ;;		line 44 in file "Led.c"
   590 ;; Parameters:    Size  Location     Type
   591 ;;  led             1    wreg     enum E859
   592 ;; Auto vars:     Size  Location     Type
   593 ;;  led             1    2[COMMON] enum E859
   594 ;;  ret             1    3[COMMON] unsigned char 
   595 ;; Return value:  Size  Location     Type
   596 ;;                  1    wreg      unsigned char 
   597 ;; Registers used:
   598 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   599 ;; Tracked objects:
   600 ;;		On entry : 0/0
   601 ;;		On exit  : 0/0
   602 ;;		Unchanged: 0/0
   603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   604 ;;      Params:         0       0       0       0       0
   605 ;;      Locals:         2       0       0       0       0
   606 ;;      Temps:          2       0       0       0       0
   607 ;;      Totals:         4       0       0       0       0
   608 ;;Total ram usage:        4 bytes
   609 ;; Hardware stack levels used:    1
   610 ;; This function calls:
   611 ;;		Nothing
   612 ;; This function is called by:
   613 ;;		_LED_Toggle
   614 ;; This function uses a non-reentrant model
   615 ;;
   616                           
   617                           
   618                           ;psect for function _LED_GetState
   619  06DE                     _LED_GetState:	
   620                           
   621                           ;incstack = 0
   622                           ; Regs used in _LED_GetState: [wreg-fsr0h+status,2+status,0]
   623                           ;LED_GetState@led stored from wreg
   624  06DE  00F2               	movwf	LED_GetState@led
   625  06DF                     l715:	
   626                           
   627                           ;Led.c: 44: u8_t LED_GetState(LED_t led);Led.c: 45: {;Led.c: 47:     u8_t ret = 1;
   628  06DF  01F3               	clrf	LED_GetState@ret
   629  06E0  0AF3               	incf	LED_GetState@ret,f
   630                           
   631                           ;Led.c: 48:     switch(led)
   632  06E1  2F15               	goto	l727
   633  06E2                     l717:	
   634                           
   635                           ;Led.c: 51:             ret = (((PORTB) >> (0))& 1);
   636  06E2  1283               	bcf	3,5	;RP0=0, select bank0
   637  06E3  1303               	bcf	3,6	;RP1=0, select bank0
   638  06E4  0806               	movf	6,w	;volatile
   639  06E5  3901               	andlw	1
   640  06E6  00F0               	movwf	??_LED_GetState
   641  06E7  0870               	movf	??_LED_GetState,w
   642  06E8  00F3               	movwf	LED_GetState@ret
   643                           
   644                           ;Led.c: 52:             break;
   645  06E9  2F2B               	goto	l729
   646  06EA                     l719:	
   647                           
   648                           ;Led.c: 54:             ret = (((PORTB) >> (1))& 1);
   649  06EA  1283               	bcf	3,5	;RP0=0, select bank0
   650  06EB  1303               	bcf	3,6	;RP1=0, select bank0
   651  06EC  0806               	movf	6,w	;volatile
   652  06ED  00F0               	movwf	??_LED_GetState
   653  06EE  1003               	clrc
   654  06EF  0C70               	rrf	??_LED_GetState,w
   655  06F0  3901               	andlw	1
   656  06F1  00F1               	movwf	??_LED_GetState+1
   657  06F2  0871               	movf	??_LED_GetState+1,w
   658  06F3  00F3               	movwf	LED_GetState@ret
   659                           
   660                           ;Led.c: 55:             break;
   661  06F4  2F2B               	goto	l729
   662  06F5                     l721:	
   663                           
   664                           ;Led.c: 57:             ret = (((PORTB) >> (2))& 1);
   665  06F5  1283               	bcf	3,5	;RP0=0, select bank0
   666  06F6  1303               	bcf	3,6	;RP1=0, select bank0
   667  06F7  0806               	movf	6,w	;volatile
   668  06F8  00F0               	movwf	??_LED_GetState
   669  06F9  3002               	movlw	2
   670  06FA                     u115:	
   671  06FA  1003               	clrc
   672  06FB  0CF0               	rrf	??_LED_GetState,f
   673  06FC  3EFF               	addlw	-1
   674  06FD  1D03               	skipz
   675  06FE  2EFA               	goto	u115
   676  06FF  0870               	movf	??_LED_GetState,w
   677  0700  3901               	andlw	1
   678  0701  00F1               	movwf	??_LED_GetState+1
   679  0702  0871               	movf	??_LED_GetState+1,w
   680  0703  00F3               	movwf	LED_GetState@ret
   681                           
   682                           ;Led.c: 58:             break;
   683  0704  2F2B               	goto	l729
   684  0705                     l723:	
   685                           
   686                           ;Led.c: 60:             ret = (((PORTB) >> (3))& 1);
   687  0705  1283               	bcf	3,5	;RP0=0, select bank0
   688  0706  1303               	bcf	3,6	;RP1=0, select bank0
   689  0707  0806               	movf	6,w	;volatile
   690  0708  00F0               	movwf	??_LED_GetState
   691  0709  3003               	movlw	3
   692  070A                     u125:	
   693  070A  1003               	clrc
   694  070B  0CF0               	rrf	??_LED_GetState,f
   695  070C  3EFF               	addlw	-1
   696  070D  1D03               	skipz
   697  070E  2F0A               	goto	u125
   698  070F  0870               	movf	??_LED_GetState,w
   699  0710  3901               	andlw	1
   700  0711  00F1               	movwf	??_LED_GetState+1
   701  0712  0871               	movf	??_LED_GetState+1,w
   702  0713  00F3               	movwf	LED_GetState@ret
   703                           
   704                           ;Led.c: 61:             break;
   705  0714  2F2B               	goto	l729
   706  0715                     l727:	
   707  0715  0872               	movf	LED_GetState@led,w
   708  0716  00F0               	movwf	??_LED_GetState
   709  0717  01F1               	clrf	??_LED_GetState+1
   710                           
   711                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   712                           ; Switch size 1, requested type "simple"
   713                           ; Number of cases is 1, Range of values is 0 to 0
   714                           ; switch strategies available:
   715                           ; Name         Instructions Cycles
   716                           ; simple_byte            4     3 (average)
   717                           ; direct_byte           11     8 (fixed)
   718                           ; jumptable            260     6 (fixed)
   719                           ;	Chosen strategy is simple_byte
   720  0718  0871               	movf	??_LED_GetState+1,w
   721  0719  3A00               	xorlw	0	; case 0
   722  071A  1903               	skipnz
   723  071B  2F1D               	goto	l997
   724  071C  2F2B               	goto	l729
   725  071D                     l997:	
   726                           
   727                           ; Switch size 1, requested type "simple"
   728                           ; Number of cases is 4, Range of values is 0 to 3
   729                           ; switch strategies available:
   730                           ; Name         Instructions Cycles
   731                           ; simple_byte           13     7 (average)
   732                           ; direct_byte           20     8 (fixed)
   733                           ; jumptable            260     6 (fixed)
   734                           ;	Chosen strategy is simple_byte
   735  071D  0870               	movf	??_LED_GetState,w
   736  071E  3A00               	xorlw	0	; case 0
   737  071F  1903               	skipnz
   738  0720  2EE2               	goto	l717
   739  0721  3A01               	xorlw	1	; case 1
   740  0722  1903               	skipnz
   741  0723  2EEA               	goto	l719
   742  0724  3A03               	xorlw	3	; case 2
   743  0725  1903               	skipnz
   744  0726  2EF5               	goto	l721
   745  0727  3A01               	xorlw	1	; case 3
   746  0728  1903               	skipnz
   747  0729  2F05               	goto	l723
   748  072A  2F2B               	goto	l729
   749  072B                     l729:	
   750                           
   751                           ;Led.c: 66:     return ret;
   752  072B  0873               	movf	LED_GetState@ret,w
   753  072C                     l67:	
   754  072C  0008               	return
   755  072D                     __end_of_LED_GetState:	
   756                           
   757                           	psect	text3
   758  078F                     __ptext3:	
   759 ;; *************** function _LED_Init *****************
   760 ;; Defined at:
   761 ;;		line 14 in file "Led.c"
   762 ;; Parameters:    Size  Location     Type
   763 ;;  led             1    wreg     enum E859
   764 ;;  state           1    8[COMMON] enum E865
   765 ;; Auto vars:     Size  Location     Type
   766 ;;  led             1   11[COMMON] enum E859
   767 ;;  ret             1   12[COMMON] unsigned char 
   768 ;; Return value:  Size  Location     Type
   769 ;;                  1    wreg      unsigned char 
   770 ;; Registers used:
   771 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   772 ;; Tracked objects:
   773 ;;		On entry : 0/0
   774 ;;		On exit  : 0/0
   775 ;;		Unchanged: 0/0
   776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   777 ;;      Params:         1       0       0       0       0
   778 ;;      Locals:         2       0       0       0       0
   779 ;;      Temps:          2       0       0       0       0
   780 ;;      Totals:         5       0       0       0       0
   781 ;;Total ram usage:        5 bytes
   782 ;; Hardware stack levels used:    1
   783 ;; Hardware stack levels required when called:    1
   784 ;; This function calls:
   785 ;;		_GPIO_Init_Pin
   786 ;;		_LED_SetState
   787 ;; This function is called by:
   788 ;;		_main
   789 ;; This function uses a non-reentrant model
   790 ;;
   791                           
   792                           
   793                           ;psect for function _LED_Init
   794  078F                     _LED_Init:	
   795                           
   796                           ;incstack = 0
   797                           ; Regs used in _LED_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   798                           ;LED_Init@led stored from wreg
   799  078F  00FB               	movwf	LED_Init@led
   800  0790                     l897:	
   801                           
   802                           ;Led.c: 21:     switch(led)
   803  0790  2FD6               	goto	l909
   804  0791                     l899:	
   805                           
   806                           ;Led.c: 24:             ret = GPIO_Init_Pin(&(TRISB),(0),(0));
   807  0791  3086               	movlw	134
   808  0792  00F0               	movwf	GPIO_Init_Pin@DirRegAddress
   809  0793  3000               	movlw	0
   810  0794  00F1               	movwf	GPIO_Init_Pin@DirRegAddress+1
   811  0795  01F2               	clrf	GPIO_Init_Pin@pin_number
   812  0796  01F3               	clrf	GPIO_Init_Pin@dir
   813  0797  120A  118A  272D  120A  118A  	fcall	_GPIO_Init_Pin
   814  079C  00F9               	movwf	??_LED_Init
   815  079D  0879               	movf	??_LED_Init,w
   816  079E  00FC               	movwf	LED_Init@ret
   817                           
   818                           ;Led.c: 25:             break;
   819  079F  2FEC               	goto	l911
   820  07A0                     l901:	
   821                           
   822                           ;Led.c: 27:             ret = GPIO_Init_Pin(&(TRISB),(1),(0));
   823  07A0  3086               	movlw	134
   824  07A1  00F0               	movwf	GPIO_Init_Pin@DirRegAddress
   825  07A2  3000               	movlw	0
   826  07A3  00F1               	movwf	GPIO_Init_Pin@DirRegAddress+1
   827  07A4  01F2               	clrf	GPIO_Init_Pin@pin_number
   828  07A5  0AF2               	incf	GPIO_Init_Pin@pin_number,f
   829  07A6  01F3               	clrf	GPIO_Init_Pin@dir
   830  07A7  120A  118A  272D  120A  118A  	fcall	_GPIO_Init_Pin
   831  07AC  00F9               	movwf	??_LED_Init
   832  07AD  0879               	movf	??_LED_Init,w
   833  07AE  00FC               	movwf	LED_Init@ret
   834                           
   835                           ;Led.c: 28:             break;
   836  07AF  2FEC               	goto	l911
   837  07B0                     l903:	
   838                           
   839                           ;Led.c: 30:             ret = GPIO_Init_Pin(&(TRISB),(2),(0));
   840  07B0  3086               	movlw	134
   841  07B1  00F0               	movwf	GPIO_Init_Pin@DirRegAddress
   842  07B2  3000               	movlw	0
   843  07B3  00F1               	movwf	GPIO_Init_Pin@DirRegAddress+1
   844  07B4  3002               	movlw	2
   845  07B5  00F9               	movwf	??_LED_Init
   846  07B6  0879               	movf	??_LED_Init,w
   847  07B7  00F2               	movwf	GPIO_Init_Pin@pin_number
   848  07B8  01F3               	clrf	GPIO_Init_Pin@dir
   849  07B9  120A  118A  272D  120A  118A  	fcall	_GPIO_Init_Pin
   850  07BE  00FA               	movwf	??_LED_Init+1
   851  07BF  087A               	movf	??_LED_Init+1,w
   852  07C0  00FC               	movwf	LED_Init@ret
   853                           
   854                           ;Led.c: 31:             break;
   855  07C1  2FEC               	goto	l911
   856  07C2                     l905:	
   857                           
   858                           ;Led.c: 33:             ret = GPIO_Init_Pin(&(TRISB),(3),(0));
   859  07C2  3086               	movlw	134
   860  07C3  00F0               	movwf	GPIO_Init_Pin@DirRegAddress
   861  07C4  3000               	movlw	0
   862  07C5  00F1               	movwf	GPIO_Init_Pin@DirRegAddress+1
   863  07C6  3003               	movlw	3
   864  07C7  00F9               	movwf	??_LED_Init
   865  07C8  0879               	movf	??_LED_Init,w
   866  07C9  00F2               	movwf	GPIO_Init_Pin@pin_number
   867  07CA  01F3               	clrf	GPIO_Init_Pin@dir
   868  07CB  120A  118A  272D  120A  118A  	fcall	_GPIO_Init_Pin
   869  07D0  00FA               	movwf	??_LED_Init+1
   870  07D1  087A               	movf	??_LED_Init+1,w
   871  07D2  00FC               	movwf	LED_Init@ret
   872                           
   873                           ;Led.c: 34:             break;
   874  07D3  2FEC               	goto	l911
   875  07D4                     l907:	
   876  07D4  01FC               	clrf	LED_Init@ret
   877                           
   878                           ;Led.c: 36:     }
   879  07D5  2FEC               	goto	l911
   880  07D6                     l909:	
   881  07D6  087B               	movf	LED_Init@led,w
   882  07D7  00F9               	movwf	??_LED_Init
   883  07D8  01FA               	clrf	??_LED_Init+1
   884                           
   885                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   886                           ; Switch size 1, requested type "simple"
   887                           ; Number of cases is 1, Range of values is 0 to 0
   888                           ; switch strategies available:
   889                           ; Name         Instructions Cycles
   890                           ; simple_byte            4     3 (average)
   891                           ; direct_byte           11     8 (fixed)
   892                           ; jumptable            260     6 (fixed)
   893                           ;	Chosen strategy is simple_byte
   894  07D9  087A               	movf	??_LED_Init+1,w
   895  07DA  3A00               	xorlw	0	; case 0
   896  07DB  1903               	skipnz
   897  07DC  2FDE               	goto	l999
   898  07DD  2FD4               	goto	l907
   899  07DE                     l999:	
   900                           
   901                           ; Switch size 1, requested type "simple"
   902                           ; Number of cases is 4, Range of values is 0 to 3
   903                           ; switch strategies available:
   904                           ; Name         Instructions Cycles
   905                           ; simple_byte           13     7 (average)
   906                           ; direct_byte           20     8 (fixed)
   907                           ; jumptable            260     6 (fixed)
   908                           ;	Chosen strategy is simple_byte
   909  07DE  0879               	movf	??_LED_Init,w
   910  07DF  3A00               	xorlw	0	; case 0
   911  07E0  1903               	skipnz
   912  07E1  2F91               	goto	l899
   913  07E2  3A01               	xorlw	1	; case 1
   914  07E3  1903               	skipnz
   915  07E4  2FA0               	goto	l901
   916  07E5  3A03               	xorlw	3	; case 2
   917  07E6  1903               	skipnz
   918  07E7  2FB0               	goto	l903
   919  07E8  3A01               	xorlw	1	; case 3
   920  07E9  1903               	skipnz
   921  07EA  2FC2               	goto	l905
   922  07EB  2FD4               	goto	l907
   923  07EC                     l911:	
   924                           
   925                           ;Led.c: 37:     if(ret != 0)
   926  07EC  087C               	movf	LED_Init@ret,w
   927  07ED  1903               	btfsc	3,2
   928  07EE  2FF0               	goto	u311
   929  07EF  2FF1               	goto	u310
   930  07F0                     u311:	
   931  07F0  2FFB               	goto	l57
   932  07F1                     u310:	
   933  07F1                     l913:	
   934                           
   935                           ;Led.c: 38:     {;Led.c: 39:         LED_SetState(led,state);
   936  07F1  0878               	movf	LED_Init@state,w
   937  07F2  00F9               	movwf	??_LED_Init
   938  07F3  0879               	movf	??_LED_Init,w
   939  07F4  00F0               	movwf	LED_SetState@state
   940  07F5  087B               	movf	LED_Init@led,w
   941  07F6  120A  118A  2691  120A  118A  	fcall	_LED_SetState
   942  07FB                     l57:	
   943  07FB  0008               	return
   944  07FC                     __end_of_LED_Init:	
   945                           
   946                           	psect	text4
   947  0691                     __ptext4:	
   948 ;; *************** function _LED_SetState *****************
   949 ;; Defined at:
   950 ;;		line 68 in file "Led.c"
   951 ;; Parameters:    Size  Location     Type
   952 ;;  led             1    wreg     enum E859
   953 ;;  state           1    0[COMMON] enum E865
   954 ;; Auto vars:     Size  Location     Type
   955 ;;  led             1    3[COMMON] enum E859
   956 ;; Return value:  Size  Location     Type
   957 ;;                  1    wreg      void 
   958 ;; Registers used:
   959 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   960 ;; Tracked objects:
   961 ;;		On entry : 0/0
   962 ;;		On exit  : 0/0
   963 ;;		Unchanged: 0/0
   964 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   965 ;;      Params:         1       0       0       0       0
   966 ;;      Locals:         1       0       0       0       0
   967 ;;      Temps:          2       0       0       0       0
   968 ;;      Totals:         4       0       0       0       0
   969 ;;Total ram usage:        4 bytes
   970 ;; Hardware stack levels used:    1
   971 ;; This function calls:
   972 ;;		Nothing
   973 ;; This function is called by:
   974 ;;		_LED_Init
   975 ;;		_LED_Toggle
   976 ;; This function uses a non-reentrant model
   977 ;;
   978                           
   979                           
   980                           ;psect for function _LED_SetState
   981  0691                     _LED_SetState:	
   982                           
   983                           ;incstack = 0
   984                           ; Regs used in _LED_SetState: [wreg-fsr0h+status,2+status,0]
   985                           ;LED_SetState@led stored from wreg
   986  0691  00F3               	movwf	LED_SetState@led
   987  0692                     l879:	
   988                           
   989                           ;Led.c: 68: void LED_SetState(LED_t led, LEDState_t state);Led.c: 69: {;Led.c: 71:     s
      +                          witch(led)
   990  0692  2EC7               	goto	l891
   991  0693                     l881:	
   992                           
   993                           ;Led.c: 74:             (((PORTB))=((PORTB) & ~(1<<(0)))|(state<<(0)));
   994  0693  1283               	bcf	3,5	;RP0=0, select bank0
   995  0694  1303               	bcf	3,6	;RP1=0, select bank0
   996  0695  0806               	movf	6,w	;volatile
   997  0696  39FE               	andlw	254
   998  0697  0470               	iorwf	LED_SetState@state,w
   999  0698  0086               	movwf	6	;volatile
  1000                           
  1001                           ;Led.c: 75:             break;
  1002  0699  2EDD               	goto	l77
  1003  069A                     l883:	
  1004                           
  1005                           ;Led.c: 77:             (((PORTB))=((PORTB) & ~(1<<(1)))|(state<<(1)));
  1006  069A  0870               	movf	LED_SetState@state,w
  1007  069B  00F1               	movwf	??_LED_SetState
  1008  069C  3001               	movlw	1
  1009  069D                     u285:	
  1010  069D  1003               	clrc
  1011  069E  0DF1               	rlf	??_LED_SetState,f
  1012  069F  3EFF               	addlw	-1
  1013  06A0  1D03               	skipz
  1014  06A1  2E9D               	goto	u285
  1015  06A2  1283               	bcf	3,5	;RP0=0, select bank0
  1016  06A3  1303               	bcf	3,6	;RP1=0, select bank0
  1017  06A4  0806               	movf	6,w	;volatile
  1018  06A5  39FD               	andlw	253
  1019  06A6  0471               	iorwf	??_LED_SetState,w
  1020  06A7  0086               	movwf	6	;volatile
  1021                           
  1022                           ;Led.c: 78:             break;
  1023  06A8  2EDD               	goto	l77
  1024  06A9                     l885:	
  1025                           
  1026                           ;Led.c: 80:             (((PORTB))=((PORTB) & ~(1<<(2)))|(state<<(2)));
  1027  06A9  0870               	movf	LED_SetState@state,w
  1028  06AA  00F1               	movwf	??_LED_SetState
  1029  06AB  3002               	movlw	2
  1030  06AC                     u295:	
  1031  06AC  1003               	clrc
  1032  06AD  0DF1               	rlf	??_LED_SetState,f
  1033  06AE  3EFF               	addlw	-1
  1034  06AF  1D03               	skipz
  1035  06B0  2EAC               	goto	u295
  1036  06B1  1283               	bcf	3,5	;RP0=0, select bank0
  1037  06B2  1303               	bcf	3,6	;RP1=0, select bank0
  1038  06B3  0806               	movf	6,w	;volatile
  1039  06B4  39FB               	andlw	251
  1040  06B5  0471               	iorwf	??_LED_SetState,w
  1041  06B6  0086               	movwf	6	;volatile
  1042                           
  1043                           ;Led.c: 81:             break;
  1044  06B7  2EDD               	goto	l77
  1045  06B8                     l887:	
  1046                           
  1047                           ;Led.c: 83:             (((PORTB))=((PORTB) & ~(1<<(3)))|(state<<(3)));
  1048  06B8  0870               	movf	LED_SetState@state,w
  1049  06B9  00F1               	movwf	??_LED_SetState
  1050  06BA  3003               	movlw	3
  1051  06BB                     u305:	
  1052  06BB  1003               	clrc
  1053  06BC  0DF1               	rlf	??_LED_SetState,f
  1054  06BD  3EFF               	addlw	-1
  1055  06BE  1D03               	skipz
  1056  06BF  2EBB               	goto	u305
  1057  06C0  1283               	bcf	3,5	;RP0=0, select bank0
  1058  06C1  1303               	bcf	3,6	;RP1=0, select bank0
  1059  06C2  0806               	movf	6,w	;volatile
  1060  06C3  39F7               	andlw	247
  1061  06C4  0471               	iorwf	??_LED_SetState,w
  1062  06C5  0086               	movwf	6	;volatile
  1063                           
  1064                           ;Led.c: 84:             break;
  1065  06C6  2EDD               	goto	l77
  1066  06C7                     l891:	
  1067  06C7  0873               	movf	LED_SetState@led,w
  1068  06C8  00F1               	movwf	??_LED_SetState
  1069  06C9  01F2               	clrf	??_LED_SetState+1
  1070                           
  1071                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1072                           ; Switch size 1, requested type "simple"
  1073                           ; Number of cases is 1, Range of values is 0 to 0
  1074                           ; switch strategies available:
  1075                           ; Name         Instructions Cycles
  1076                           ; simple_byte            4     3 (average)
  1077                           ; direct_byte           11     8 (fixed)
  1078                           ; jumptable            260     6 (fixed)
  1079                           ;	Chosen strategy is simple_byte
  1080  06CA  0872               	movf	??_LED_SetState+1,w
  1081  06CB  3A00               	xorlw	0	; case 0
  1082  06CC  1903               	skipnz
  1083  06CD  2ECF               	goto	l1001
  1084  06CE  2EDD               	goto	l77
  1085  06CF                     l1001:	
  1086                           
  1087                           ; Switch size 1, requested type "simple"
  1088                           ; Number of cases is 4, Range of values is 0 to 3
  1089                           ; switch strategies available:
  1090                           ; Name         Instructions Cycles
  1091                           ; simple_byte           13     7 (average)
  1092                           ; direct_byte           20     8 (fixed)
  1093                           ; jumptable            260     6 (fixed)
  1094                           ;	Chosen strategy is simple_byte
  1095  06CF  0871               	movf	??_LED_SetState,w
  1096  06D0  3A00               	xorlw	0	; case 0
  1097  06D1  1903               	skipnz
  1098  06D2  2E93               	goto	l881
  1099  06D3  3A01               	xorlw	1	; case 1
  1100  06D4  1903               	skipnz
  1101  06D5  2E9A               	goto	l883
  1102  06D6  3A03               	xorlw	3	; case 2
  1103  06D7  1903               	skipnz
  1104  06D8  2EA9               	goto	l885
  1105  06D9  3A01               	xorlw	1	; case 3
  1106  06DA  1903               	skipnz
  1107  06DB  2EB8               	goto	l887
  1108  06DC  2EDD               	goto	l77
  1109  06DD                     l77:	
  1110  06DD  0008               	return
  1111  06DE                     __end_of_LED_SetState:	
  1112                           
  1113                           	psect	text5
  1114  072D                     __ptext5:	
  1115 ;; *************** function _GPIO_Init_Pin *****************
  1116 ;; Defined at:
  1117 ;;		line 34 in file "GPIO.c"
  1118 ;; Parameters:    Size  Location     Type
  1119 ;;  DirRegAddres    2    0[COMMON] PTR unsigned char 
  1120 ;;		 -> TRISB(1), 
  1121 ;;  pin_number      1    2[COMMON] unsigned char 
  1122 ;;  dir             1    3[COMMON] unsigned char 
  1123 ;; Auto vars:     Size  Location     Type
  1124 ;;  ret             1    7[COMMON] unsigned char 
  1125 ;; Return value:  Size  Location     Type
  1126 ;;                  1    wreg      unsigned char 
  1127 ;; Registers used:
  1128 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1129 ;; Tracked objects:
  1130 ;;		On entry : 0/0
  1131 ;;		On exit  : 0/0
  1132 ;;		Unchanged: 0/0
  1133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1134 ;;      Params:         4       0       0       0       0
  1135 ;;      Locals:         1       0       0       0       0
  1136 ;;      Temps:          3       0       0       0       0
  1137 ;;      Totals:         8       0       0       0       0
  1138 ;;Total ram usage:        8 bytes
  1139 ;; Hardware stack levels used:    1
  1140 ;; This function calls:
  1141 ;;		Nothing
  1142 ;; This function is called by:
  1143 ;;		_LED_Init
  1144 ;; This function uses a non-reentrant model
  1145 ;;
  1146                           
  1147                           
  1148                           ;psect for function _GPIO_Init_Pin
  1149  072D                     _GPIO_Init_Pin:	
  1150  072D                     l859:	
  1151                           ;incstack = 0
  1152                           ; Regs used in _GPIO_Init_Pin: [wreg-fsr0h+status,2+status,0]
  1153                           
  1154                           
  1155                           ;GPIO.c: 34: u8_t GPIO_Init_Pin(u8_t *DirRegAddress ,u8_t pin_number,u8_t dir );GPIO.c: 
      +                          35: {;GPIO.c: 36:     u8_t ret = 1;
  1156  072D  01F7               	clrf	GPIO_Init_Pin@ret
  1157  072E  0AF7               	incf	GPIO_Init_Pin@ret,f
  1158  072F                     l861:	
  1159                           
  1160                           ;GPIO.c: 38:     if(*DirRegAddress != (TRISA) && *DirRegAddress != (TRISB) &&
  1161  072F  0870               	movf	GPIO_Init_Pin@DirRegAddress,w
  1162  0730  0084               	movwf	4
  1163  0731  1783               	bsf	3,7
  1164  0732  1C71               	btfss	GPIO_Init_Pin@DirRegAddress+1,0
  1165  0733  1383               	bcf	3,7
  1166  0734  0800               	movf	0,w
  1167  0735  1683               	bsf	3,5	;RP0=1, select bank1
  1168  0736  1303               	bcf	3,6	;RP1=0, select bank1
  1169  0737  0605               	xorwf	5,w	;volatile
  1170  0738  1903               	skipnz
  1171  0739  2F3B               	goto	u211
  1172  073A  2F3C               	goto	u210
  1173  073B                     u211:	
  1174  073B  2F6A               	goto	l873
  1175  073C                     u210:	
  1176  073C                     l863:	
  1177  073C  0870               	movf	GPIO_Init_Pin@DirRegAddress,w
  1178  073D  0084               	movwf	4
  1179  073E  1783               	bsf	3,7
  1180  073F  1C71               	btfss	GPIO_Init_Pin@DirRegAddress+1,0
  1181  0740  1383               	bcf	3,7
  1182  0741  0800               	movf	0,w
  1183  0742  0606               	xorwf	6,w	;volatile
  1184  0743  1903               	skipnz
  1185  0744  2F46               	goto	u221
  1186  0745  2F47               	goto	u220
  1187  0746                     u221:	
  1188  0746  2F6A               	goto	l873
  1189  0747                     u220:	
  1190  0747                     l865:	
  1191  0747  0870               	movf	GPIO_Init_Pin@DirRegAddress,w
  1192  0748  0084               	movwf	4
  1193  0749  1783               	bsf	3,7
  1194  074A  1C71               	btfss	GPIO_Init_Pin@DirRegAddress+1,0
  1195  074B  1383               	bcf	3,7
  1196  074C  0800               	movf	0,w
  1197  074D  0607               	xorwf	7,w	;volatile
  1198  074E  1903               	skipnz
  1199  074F  2F51               	goto	u231
  1200  0750  2F52               	goto	u230
  1201  0751                     u231:	
  1202  0751  2F6A               	goto	l873
  1203  0752                     u230:	
  1204  0752                     l867:	
  1205  0752  0870               	movf	GPIO_Init_Pin@DirRegAddress,w
  1206  0753  0084               	movwf	4
  1207  0754  1783               	bsf	3,7
  1208  0755  1C71               	btfss	GPIO_Init_Pin@DirRegAddress+1,0
  1209  0756  1383               	bcf	3,7
  1210  0757  0800               	movf	0,w
  1211  0758  0608               	xorwf	8,w	;volatile
  1212  0759  1903               	skipnz
  1213  075A  2F5C               	goto	u241
  1214  075B  2F5D               	goto	u240
  1215  075C                     u241:	
  1216  075C  2F6A               	goto	l873
  1217  075D                     u240:	
  1218  075D                     l869:	
  1219  075D  0870               	movf	GPIO_Init_Pin@DirRegAddress,w
  1220  075E  0084               	movwf	4
  1221  075F  1783               	bsf	3,7
  1222  0760  1C71               	btfss	GPIO_Init_Pin@DirRegAddress+1,0
  1223  0761  1383               	bcf	3,7
  1224  0762  0800               	movf	0,w
  1225  0763  0609               	xorwf	9,w	;volatile
  1226  0764  1903               	skipnz
  1227  0765  2F67               	goto	u251
  1228  0766  2F68               	goto	u250
  1229  0767                     u251:	
  1230  0767  2F6A               	goto	l873
  1231  0768                     u250:	
  1232  0768                     l871:	
  1233                           
  1234                           ;GPIO.c: 41:     {;GPIO.c: 43:        ret = 0;
  1235  0768  01F7               	clrf	GPIO_Init_Pin@ret
  1236                           
  1237                           ;GPIO.c: 44:     }
  1238  0769  2F8D               	goto	l875
  1239  076A                     l873:	
  1240                           
  1241                           ;GPIO.c: 46:     {;GPIO.c: 47:         ((*DirRegAddress)=(*DirRegAddress & ~(1<<pin_numb
      +                          er))|(dir<<pin_number));
  1242  076A  0873               	movf	GPIO_Init_Pin@dir,w
  1243  076B  00F4               	movwf	??_GPIO_Init_Pin
  1244  076C  0A72               	incf	GPIO_Init_Pin@pin_number,w
  1245  076D  2F70               	goto	u264
  1246  076E                     u265:	
  1247  076E  1003               	clrc
  1248  076F  0DF4               	rlf	??_GPIO_Init_Pin,f
  1249  0770                     u264:	
  1250  0770  3EFF               	addlw	-1
  1251  0771  1D03               	skipz
  1252  0772  2F6E               	goto	u265
  1253  0773  0870               	movf	GPIO_Init_Pin@DirRegAddress,w
  1254  0774  0084               	movwf	4
  1255  0775  1783               	bsf	3,7
  1256  0776  1C71               	btfss	GPIO_Init_Pin@DirRegAddress+1,0
  1257  0777  1383               	bcf	3,7
  1258  0778  3001               	movlw	1
  1259  0779  00F5               	movwf	??_GPIO_Init_Pin+1
  1260  077A  0A72               	incf	GPIO_Init_Pin@pin_number,w
  1261  077B  2F7E               	goto	u274
  1262  077C                     u275:	
  1263  077C  1003               	clrc
  1264  077D  0DF5               	rlf	??_GPIO_Init_Pin+1,f
  1265  077E                     u274:	
  1266  077E  3EFF               	addlw	-1
  1267  077F  1D03               	skipz
  1268  0780  2F7C               	goto	u275
  1269  0781  0875               	movf	??_GPIO_Init_Pin+1,w
  1270  0782  3AFF               	xorlw	255
  1271  0783  0500               	andwf	0,w
  1272  0784  0474               	iorwf	??_GPIO_Init_Pin,w
  1273  0785  00F6               	movwf	??_GPIO_Init_Pin+2
  1274  0786  0870               	movf	GPIO_Init_Pin@DirRegAddress,w
  1275  0787  0084               	movwf	4
  1276  0788  1783               	bsf	3,7
  1277  0789  1C71               	btfss	GPIO_Init_Pin@DirRegAddress+1,0
  1278  078A  1383               	bcf	3,7
  1279  078B  0876               	movf	??_GPIO_Init_Pin+2,w
  1280  078C  0080               	movwf	0
  1281  078D                     l875:	
  1282                           
  1283                           ;GPIO.c: 49:     return ret;
  1284  078D  0877               	movf	GPIO_Init_Pin@ret,w
  1285  078E                     l38:	
  1286  078E  0008               	return
  1287  078F                     __end_of_GPIO_Init_Pin:	
  1288  007E                     btemp	set	126	;btemp
  1289  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80      3       3
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    GPIO_Init_Pin@DirRegAddress	PTR unsigned char  size(2) Largest target is 1
		 -> TRISB(SFR1[1]), 


Critical Paths under _main in COMMON

    _main->_LED_Init
    _LED_Toggle->_LED_GetState
    _LED_Toggle->_LED_SetState
    _LED_Init->_GPIO_Init_Pin

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    2180
                                              0 BANK0      3     3      0
                           _LED_Init
                         _LED_Toggle
 ---------------------------------------------------------------------------------
 (1) _LED_Toggle                                           1     1      0     434
                                              4 COMMON     1     1      0
                       _LED_GetState
                       _LED_SetState
 ---------------------------------------------------------------------------------
 (2) _LED_GetState                                         4     4      0      30
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _LED_Init                                             5     4      1    1746
                                              8 COMMON     5     4      1
                      _GPIO_Init_Pin
                       _LED_SetState
 ---------------------------------------------------------------------------------
 (2) _LED_SetState                                         4     3      1     338
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) _GPIO_Init_Pin                                        8     4      4    1156
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LED_Init
     _GPIO_Init_Pin
     _LED_SetState
   _LED_Toggle
     _LED_GetState
     _LED_SetState

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      D       D       1       92.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      3       3       5        3.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Jan 03 23:25:03 2020

               __CFG_CP$OFF 0000                          l11 0657                          l38 078E  
                        l57 07FB                          l67 072C                          l77 06DD  
                        l85 0648                 ?_LED_Toggle 0070                         l721 06F5  
                       l723 0705                         l715 06DF                         l901 07A0  
                       l717 06E2                         l903 07B0                         l911 07EC  
                       l719 06EA                         l727 0715                         l913 07F1  
                       l905 07C2                         l729 072B                         l921 062D  
                       l907 07D4                         l923 0638                         l931 066C  
                       l861 072F                         l909 07D6                         l925 0640  
                       l933 0672                         l871 0768                         l863 073C  
                       l935 0678                         l927 0649                         l865 0747  
                       l873 076A                         l881 0693                         l929 065D  
                       l875 078D                         l867 0752                         l859 072D  
                       l883 069A                         l891 06C7                         l869 075D  
                       l885 06A9                         l887 06B8                         l879 0692  
                       l897 0790                         l899 0791                         l997 071D  
                       l999 07DE                         u210 073C                         u211 073B  
                       u115 06FA                         u220 0747                         u221 0746  
                       u125 070A                         u230 0752                         u310 07F1  
                       u231 0751                         u311 07F0                         u240 075D  
                       u320 0638                         u241 075C                         u305 06BB  
                       u321 0637                         u250 0768                         u251 0767  
                       u264 0770                         u265 076E                         u337 0665  
                       u274 077E                __CFG_CPD$OFF 0000                         u275 077C  
                       u347 0680                         u285 069D                         u295 06AC  
                       fsr0 0004                         indf 0000                __CFG_FOSC$HS 0000  
              __CFG_LVP$OFF 0000                        l1001 06CF                __CFG_WRT$OFF 0000  
             ?_LED_GetState 0070                        _main 0649                        btemp 007E  
                      start 0000               _GPIO_Init_Pin 072D               ?_LED_SetState 0070  
          __end_of_LED_Init 07FC                       ?_main 0070               __CFG_WDTE$OFF 0000  
                     _PORTB 0006                       _TRISA 0085                       _TRISB 0086  
                     _TRISC 0087                       _TRISD 0088                       _TRISE 0089  
               LED_Init@led 007B                 LED_Init@ret 007C              __CFG_BOREN$OFF 0000  
            ??_LED_GetState 0070                       status 0003                       wtemp0 007E  
       __size_of_LED_Toggle 001D              ?_GPIO_Init_Pin 0070             __initialization 07FC  
              __end_of_main 0691              ??_LED_SetState 0071                      ??_main 0020  
GPIO_Init_Pin@DirRegAddress 0070              __CFG_PWRTE$OFF 0000           LED_SetState@state 0070  
   __end_of__initialization 07FC                   ?_LED_Init 0078             ??_GPIO_Init_Pin 0074  
          GPIO_Init_Pin@dir 0073            GPIO_Init_Pin@ret 0077              __pcstackCOMMON 0070  
      __end_of_LED_GetState 072D                ??_LED_Toggle 0074        __end_of_LED_SetState 06DE  
                ??_LED_Init 0079          __end_of_LED_Toggle 0649                  __pmaintext 0649  
             LED_Init@state 0078             LED_GetState@led 0072             LED_GetState@ret 0073  
                   __ptext1 062C                     __ptext2 06DE                     __ptext3 078F  
                   __ptext4 0691                     __ptext5 072D        end_of_initialization 07FC  
     __size_of_LED_GetState 004F               LED_Toggle@led 0074       __size_of_LED_SetState 004D  
   GPIO_Init_Pin@pin_number 0072                _LED_GetState 06DE           __size_of_LED_Init 006D  
              _LED_SetState 0691         start_initialization 07FC       __end_of_GPIO_Init_Pin 078F  
                 ___latbits 0002               __pcstackBANK0 0020                    _LED_Init 078F  
           LED_SetState@led 0073               __size_of_main 0048                  _LED_Toggle 062C  
    __size_of_GPIO_Init_Pin 0062  
